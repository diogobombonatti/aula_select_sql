--
-- 1o passo: criar esse projeto no usuario ORCL
-- do aluno
--
@P:\1TDSR\Salvio\BD_Sakspildap\apaga.sql
@P:\1TDSR\Salvio\BD_Sakspildap\cria.sql
@P:\1TDSR\Salvio\BD_Sakspildap\Carga_Dados.sql

SELECT * FROM T_SAK_FUNCIONARIO;

--
-- Full Qualifier
--
SELECT 	T_SAK_FUNCIONARIO.DT_NASCIMENTO,
        T_SAK_FUNCIONARIO.CD_FUNC,
		T_SAK_FUNCIONARIO.NM_FUNCionario,
		T_SAK_FUNCIONARIO.VL_SALARIO
FROM 	T_SAK_FUNCIONARIO;

SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL
FROM 	T_SAK_FUNCIONARIO F
ORDER BY 3 ASC;

--
-- Select com coluna falsa
--
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
ORDER BY F.VL_SALARIO*12 DESC;

--
-- Select com clausula WHERE
--
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
WHERE	F.CD_DEPTO = 1
ORDER BY F.VL_SALARIO*12 DESC;


SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
WHERE	F.CD_DEPTO = 1 OR F.VL_SALARIO*12 > 100000
ORDER BY F.VL_SALARIO*12 DESC;

--
-- SELECT com UNIQUE SCAN DE METODO DE ACESSO
--
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
--WHERE	F.CD_DEPTO = 1 OR F.VL_SALARIO*12 > 100000
WHERE	F.CD_FUNC = 5
ORDER BY F.VL_SALARIO*12 DESC;

-- Exibe todos os funcionarios onde a 3a letra é "e"
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
--WHERE	F.CD_DEPTO = 1 OR F.VL_SALARIO*12 > 100000
WHERE	F.NM_FUNCionario LIKE '__e%'
ORDER BY F.VL_SALARIO*12 DESC;

--
-- Seleciona o funcionario que ganha o menor salario
--
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
WHERE	F.VL_SALARIO = (    SELECT MIN(T_SAK_FUNCIONARIO.VL_SALARIO)
                            FROM T_SAK_FUNCIONARIO
                        );

--
-- Exibe os funcionarios que ganham mais do que a media
--
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL
FROM 	T_SAK_FUNCIONARIO F
WHERE	F.VL_SALARIO > (    SELECT AVG(T_SAK_FUNCIONARIO.VL_SALARIO)
                            FROM T_SAK_FUNCIONARIO
                        )
ORDER BY F.VL_SALARIO*12 DESC;

--
-- Subquery simples
--
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL,
        ( SELECT ROUND (AVG(T_SAK_FUNCIONARIO.VL_SALARIO),2)
          FROM T_SAK_FUNCIONARIO ) as Valor_medio
FROM 	T_SAK_FUNCIONARIO F
WHERE	F.VL_SALARIO > (    SELECT AVG(T_SAK_FUNCIONARIO.VL_SALARIO)
                            FROM T_SAK_FUNCIONARIO
                        )
ORDER BY F.VL_SALARIO*12 DESC;


-- Cria uma view
-- Subquery simples
--
CREATE OR REPLACE VIEW V_SAK_DADOS_FUNC AS
SELECT 	F.DT_NASCIMENTO AS DATA_NASCIMENTO,
        F.CD_FUNC AS CODIGO_FUNCIONARIO,
		F.NM_FUNCionario AS NOME_FUNCIONARIO,
        F.CD_DEPTO CODIGO_DEPARTAMENTO,
		F.VL_SALARIO AS VALOR_SALARIO_MENSAL,
		F.VL_SALARIO*12 AS VALOR_SALARIO_ANUAL,
        ( SELECT ROUND (AVG(T_SAK_FUNCIONARIO.VL_SALARIO),2)
          FROM T_SAK_FUNCIONARIO ) as Valor_medio
FROM 	T_SAK_FUNCIONARIO F
WHERE	F.VL_SALARIO > (    SELECT AVG(T_SAK_FUNCIONARIO.VL_SALARIO)
                            FROM T_SAK_FUNCIONARIO
                        )
ORDER BY F.VL_SALARIO*12 DESC;

SELECT * FROM V_SAK_DADOS_FUNC;

--
-- Comando IS NULL e IS NOT NULL
--
SELECT * FROM T_SAK_FUNCIONARIO WHERE VL_SALARIO IS NULL;

--
-- Comando distinct
--
SELECT DISTINCT CD_DEPTO  FROM T_SAK_FUNCIONARIO;

--
-- Exiba todos os departamentos que não tenham funcionarios associados
--
SELECT 	T_SAK_DEPTO.NM_DEPTO,
		T_SAK_DEPTO.CD_DEPTO
FROM	T_SAK_DEPTO
WHERE 	NOT EXISTS
(
		SELECT 1
		FROM T_SAK_FUNCIONARIO 
		WHERE T_SAK_FUNCIONARIO.CD_DEPTO = T_SAK_DEPTO.CD_DEPTO
);

--
-- Clausula IN
SELECT 	T_SAK_FUNCIONARIO.DT_NASCIMENTO,
        T_SAK_FUNCIONARIO.CD_FUNC,
        T_SAK_FUNCIONARIO.CD_DEPTO,
		T_SAK_FUNCIONARIO.NM_FUNCionario,
		T_SAK_FUNCIONARIO.VL_SALARIO
FROM 	T_SAK_FUNCIONARIO
WHERE 	T_SAK_FUNCIONARIO.CD_DEPTO IN (12,24,1,4,7,9,10);

SELECT 	T_SAK_FUNCIONARIO.DT_NASCIMENTO,
        T_SAK_FUNCIONARIO.CD_FUNC,
        T_SAK_FUNCIONARIO.CD_DEPTO,
		T_SAK_FUNCIONARIO.NM_FUNCionario,
		T_SAK_FUNCIONARIO.VL_SALARIO
FROM 	T_SAK_FUNCIONARIO
WHERE 	T_SAK_FUNCIONARIO.CD_DEPTO NOT IN (12,24,1,4,7,9,10);

--
-- Instruções SQL Clausula BETWEEN
--
SELECT 	T_SAK_FUNCIONARIO.DT_NASCIMENTO,
        T_SAK_FUNCIONARIO.CD_FUNC,
        T_SAK_FUNCIONARIO.CD_DEPTO,
		T_SAK_FUNCIONARIO.NM_FUNCionario,
		T_SAK_FUNCIONARIO.VL_SALARIO
FROM 	T_SAK_FUNCIONARIO
WHERE 	T_SAK_FUNCIONARIO.DT_NASCIMENTO
BETWEEN TO_DATE( '01/01/1998','dd/mm/yyyy') and 
		TO_DATE( '31/12/1998','dd/mm/yyyy');


--
-- Operador de concatenação
--
SELECT  ROWNUM,
		ROWID,
		'O funcionario '  || F.NM_FUNCIONARIO || 
        ' recebe anualmente o salário de R$' ||
        TO_CHAR(F.VL_SALARIO*12) DADOS_FUNC
FROM 	T_SAK_FUNCIONARIO F;



